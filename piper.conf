# Piper configuration file.
# Syntax format corresponds to Java-properties text representation - 
# http://docs.oracle.com/javase/6/docs/api/java/util/Properties.html

log.level=debug

# Many pipes can be defined in conf file.
# Pipe consists of two endpoints: first and second.
# <pipe_endpoint_id> := pipe.<pipe_id>.{first|second}
# <pipe_id> := <any alphanumeric string>
# 
# Pipe endpoint types supported:
# 1. TCP IN: Initiates listening socket on given address, port.
#    If local_address is not given, listens on 0.0.0.0.
#     Example:
#     <pipe_endpoint_id>.type = tcp_in
#     <pipe_endpoint_id>.local_address = 1.2.3.4
#     <pipe_endpoint_id>.local_port = 1234
# 
# 2. TCP OUT: Initiates outgoing connection to given address, port.
#     Example:
#     <pipe_endpoint_id>.type = tcp_out
#     <pipe_endpoint_id>.remote_address = 1.2.3.4
#     <pipe_endpoint_id>.remote_port = 1234
# 
# 3. UDP: Binds UDP socket on given address, port.
#    If local_address is not given, listens on 0.0.0.0.
#     Example:
#     <pipe_endpoint_id>.type = udp
#     <pipe_endpoint_id>.local_address = 1.2.3.4
#     <pipe_endpoint_id>.local_port = 1234
#     <pipe_endpoint_id>.remote_address = 5.6.7.8
#     <pipe_endpoint_id>.remote_port = 5678
# 
# 4. SERIAL: Use given serial port and baud rate
#     Example:
#     <pipe_endpoint_id>.type = serial
#     <pipe_endpoint_id>.name = /dev/ttyS2
#     <pipe_endpoint_id>.baud = 57600
# 
# 5. CAN: Use given can interface
#     Example:
#     <pipe_endpoint_id>.type = can
#     <pipe_endpoint_id>.name = vcan0
# 
# 6. PIPE: Connect to existing named pipe
#     Example:
#     <pipe_endpoint_id>.type = pipe
#     <pipe_endpoint_id>.name = \\\\.\\pipe\\my_named_pipe

#pipe.1.first.type = tcp_in
pipe.1.first.local_port = 1111
pipe.1.second.type = tcp_in
pipe.1.second.local_port = 2222

#pipe.2.first.type = pipe
pipe.2.first.name = \\\\.\\pipe\\my_named_pipe
pipe.2.second.type = tcp_out
pipe.2.second.remote_port = 4444
pipe.2.second.remote_address = localhost

#pipe.3.first.type = tcp_out
pipe.3.first.remote_port = 3333
pipe.3.first.remote_address = localhost
pipe.3.second.type = serial
pipe.3.second.name = /dev/ttyACM0
pipe.3.second.baud = 115200

#pipe.4.first.type = tcp_out
pipe.4.first.remote_port = 1111
pipe.4.first.remote_address = 192.168.88.112
pipe.4.second.type = can
pipe.4.second.name = vcan0
